<?xml version="1.0"?>
<!--

  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.

-->

<project name="downloads" default="main" basedir=".">
	<property name="FLEX_HOME" location=".."/>

	<!-- properties -->
	<property file="${FLEX_HOME}/build.properties"/>

	<property name="download.dir" value="${FLEX_HOME}/in"/>
	
    <!-- Download thirdparty code -->
    
    <!-- 
       To clean these you must call thirdparty-clean or super-clean to clean everything.  
       clean does not remove these since they don't change often and the downloads take time.
    -->
    <target name="main" 
        depends="swfobject-download,swfobject-fabridge-download,textLayout-download,osmf-download" 
        description="Copies third-party software into place for build">
        <echo message="Use thirdparty-clean or super-clean to remove these."/> 
    </target>
    
    <target name="clean" depends="swfobject-clean,swfobject-fabridge-clean" 
        description="Cleans thirdparty downloaded files.">
        <delete failonerror="false">
            <fileset dir="${basedir}/libs">
                <include name="osmf.swc"/>
                <include name="textLayout.swc"/>
            </fileset>
        </delete>
        <delete includeEmptyDirs="true" failonerror="false">
            <fileset dir="${download.dir}">
                <include name="OSMF*/**"/>
                <include name="osmf*/**"/>
                <include name="textLayout*/**"/>
                <include name="swfobject*/**"/>
            </fileset>
        </delete>
     </target>

	<!--
        MPL 1.1 Licesense Notification
        See http://www.apache.org/legal/3party.html#labeling-reciprocity
        Section "Category B: Reciprocal Licenses"
    -->
    <target name="echo-mpl1.1-license">       
        <echo message="Mozilla Public License Version 1.1:
            ${line.separator}
            ${line.separator}The contents of the file(s) are subject to the Mozilla Public License Version 1.1.
            ${line.separator}You may not use the file(s) except in compliance with the License. 
            ${line.separator}You may obtain a copy of the License here:
            ${line.separator}    http://www.mozilla.org/MPL/. 
            ${line.separator}By downloading, modifying, distributing, using and/or accessing the file(s), 
            ${line.separator}you agree to the terms and conditions of the applicable license agreement."/>
        
        <input
            message="${line.separator}I have read the MPL1.1 license information above?"
            validargs="y"
            defaultvalue="y"/>
    </target>
           
	<!--
        osmf.swc (Version 1.0)
        The swc at the top-level has lots of trace statements in it.  Use the one in the source zip.
    -->
    <target name="osmf-check" description="Checks if the Open Source Media Framework has been downloaded.">
        <available file="${basedir}/libs/osmf.swc" property="osmf.swc.present"/>
    </target>
   
    <!-- 
        Notify before downloading file with MPL1.1 license.
    -->
    <target name="ask-osmf" unless="build.noprompt">
        <echo message="The Open Source Media Framework used by the video components"/>
        <echo message="is licensed under the Mozilla Public License Version 1.1."/>
        <antcall target="echo-mpl1.1-license"/>
        <property name="do.osmf.install" value="set" />
    </target>
    
    <target name="osmf-download" depends="osmf-check" unless="osmf.swc.present">
        <antcall target="ask-osmf"/> 
               
        <available file="${download.dir}/OSMF_1.0.zip" type="file" property="osmf.zip.exists"/>
        <antcall target="download-osmf-zip" />
        
        <unzip src="${download.dir}/OSMF_1.0.zip" dest="${download.dir}">
            <patternset>
                <include name="osmf_source_v1-0.zip"/>
            </patternset>
        </unzip>
        <unzip src="${download.dir}/osmf_source_v1-0.zip" dest="${basedir}/libs">
            <patternset>
                <include name="OSMF.swc"/>
            </patternset>
            <mapper type="glob" from="OSMF.swc" to="osmf.swc" />            
        </unzip>
    </target>

    <target name="download-osmf-zip" unless="osmf.zip.exists">
        <mkdir dir="${download.dir}"/>
        <get src="http://sourceforge.net/projects/osmf.adobe/files/OSMF%201.0%20%28final%20source%2C%20ASDocs%2C%20PDF%20guides%2C%20and%20release%20notes%29/OSMF_1.0.zip/download" 
            dest="${download.dir}/OSMF_1.0.zip" 
            verbose="false"/>
    </target>
    
    <!-- swfobject.js (Version 2.2) -->
    <!-- Because this requires a network connection it downloads SWFObject only if it doesn't already exist. -->
    <target name="swfobject-check" description="Checks if SWFObject has been downloaded.">
        <available file="${basedir}/../templates/swfobject/swfobject.js" property="swfobject.js.present"/>
    </target>

    <target name="swfobject-download" depends="swfobject-check" unless="swfobject.js.present" 
        description="Copies SWFObject from code.google.com">
        
        <mkdir dir="${download.dir}"/>
        <get src="http://swfobject.googlecode.com/files/swfobject_2_2.zip" 
            dest="${download.dir}/swfobject_2_2.zip" 
            verbose="false"/>
        
        <unzip src="${download.dir}/swfobject_2_2.zip" dest="${FLEX_HOME}/templates">
            <patternset>
                <include name="swfobject/expressInstall.swf"/>
                <include name="swfobject/swfobject.js"/>
            </patternset>
        </unzip>
    </target>

    <target name="swfobject-clean" description="Deletes templates swfobject code.">
        <delete failonerror="false">
            <fileset dir="${FLEX_HOME}/templates/swfobject">
                <include name="**/**"/>
                <exclude name="history/*"/>
                <exclude name="index.template.html"/>
            </fileset>
        </delete>
    </target>
    
    <!-- the copy of swfobject.js that is in javascript/fabridge -->
    <target name="swfobject-fabridge-download" depends="swfobject-download" 
        description="Copies swfobject.js from code.google.com to fabridge">
        <mkdir dir="${basedir}/javascript/FABridge/samples/fabridge/swfobject"/>
        <copy file="${FLEX_HOME}/templates/swfobject/swfobject.js" 
            todir="${basedir}/javascript/FABridge/samples/fabridge/swfobject" />
    </target>

    <target name="swfobject-fabridge-clean" description="Deletes swobject.js from fabridge">
        <delete failonerror="false" includeemptydirs="true">
            <fileset dir="${basedir}/javascript/FABridge/samples/fabridge/swfobject">
                <include name="swfobject.js"/>
            </fileset>
        </delete>
    </target>

    <!-- textLayout.swc (Version 2.0.232) -->
    <!-- Because this requires a network connection it downloads TLF only if it doesn't already exist. -->
    <target name="textLayout-check" description="Checks if the Text Layout Framework has been downloaded.">
        <available file="${basedir}/libs/textLayout.swc" property="textLayout.swc.present"/>
    </target>

    <!-- 
        Notify before downloading file with MPL1.1 license.
    -->
    <target name="ask-tlf" unless="build.noprompt">
        <echo message="The Adobe Text Layout Framework used by the Spark text components"/>
        <echo message="is licensed under the Mozilla Public License Version 1.1."/>
        <antcall target="echo-mpl1.1-license"/>
    </target>

    <target name="textLayout-download" depends="textLayout-check" unless="textLayout.swc.present">
        <antcall target="ask-tlf"/>
        
        <available file="${download.dir}/textLayout_build.zip" type="file" property="tlf.zip.exists"/>
        <antcall target="download-tlf-zip" />
        
        <unzip src="${download.dir}/textLayout_build.zip" dest="${basedir}">
            <patternset>
                <include name="libs/textLayout.swc"/>
            </patternset>
        </unzip>
    </target>

    <target name="download-tlf-zip" unless="tlf.zip.exists">
        <mkdir dir="${download.dir}"/>
        <get src="http://sourceforge.net/projects/tlf.adobe/files/2.0/232/textLayout_build.zip/download" 
            dest="${download.dir}/textLayout_build.zip" 
            verbose="false"/>
    </target>
    
    <!-- FixMe: should this be removed? -->
    <target name="ide-clean" depends="airsdk-clean" 
        description="Delete AIR SDK and playerglobal files copied into FLEX_HOME.">
        <delete failonerror="false">
            <fileset dir="${basedir}/libs/player" includes="**/playerglobal.swc"/>
        </delete>
    </target>    

    <!-- FixMe: should this be removed? -->
    <target name="airsdk-clean" description="Delete files copied from the AIR SDK">
        <!-- Delete AIR files and directories from 'prepare' target -->
        <delete file="${FLEX_HOME}/AIR SDK license.pdf"/>
        <delete file="${FLEX_HOME}/AIR SDK Readme.txt"/>
        <delete file="${FLEX_HOME}/bin/adl"/>
        <delete file="${FLEX_HOME}/bin/adl.exe"/>
        <delete file="${FLEX_HOME}/bin/adt"/>
        <delete file="${FLEX_HOME}/bin/adt.bat"/>
        <delete dir="${FLEX_HOME}/include"/>
        <delete dir="${FLEX_HOME}/install"/>
        <delete dir="${FLEX_HOME}/frameworks/libs/air"/>
        <delete dir="${FLEX_HOME}/frameworks/projects/air"/>
        <delete file="${FLEX_HOME}/lib/adt.jar"/>
        <delete file="${FLEX_HOME}/lib/win/FlashRuntimeExtensions.lib"/>
        <delete dir="${FLEX_HOME}/runtimes"/>
        <delete includeEmptyDirs="true" failonerror="false">
            <fileset dir="${FLEX_HOME}/samples">
                <include name="badges/**" />
                <include name="descriptor-sample.xml" />
                <include name="icons/**" />
            </fileset>
        </delete>
        <delete includeEmptyDirs="true" failonerror="false">
            <fileset dir="${FLEX_HOME}/templates">
                <include name="air/**" />
                <include name="extensions/**" />
            </fileset>
        </delete>
    </target>
</project>
